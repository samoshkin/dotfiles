# ==========================
# ===  General settings  ===
# ==========================

set -g default-terminal "screen-256color"
set -ga terminal-overrides ',xterm:*:Tc'
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
set -wg allow-rename off
set -wg automatic-rename off
# When terminal is set to 'screen', tmux does not pass keystrokes like <Shift-x>. Tell it so.
set -wg xterm-keys on
set -wg aggressive-resize off
set -g focus-events on

# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set -g prefix C-a

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#T"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on

# ==========================
# ===   Key bindings     ===
# ==========================

# Unbind default key bindings, we're going to override
unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind "}"    # swap-pane -D
unbind "{"    # swap-pane -U
unbind [    # paste-buffer
unbind ]    # copy-mode
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer
unbind =    # choose-buffer
unbind !    # break-pane
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left

# Default keybindings that are still useful and left intact
# --------------------
# bind-key Space next-layout  # switch between different layouts, Alt+1..5 to pick specific layout
# bind-key .  command-prompt "move-window -t '%%'"
# bind-key < # swap window
# bind-key > # swap window
# bind-key ? list-keys -N # list all keybindings
# bind-key E select-layout -E # spread all panes evenly
# bind-key w choose-tree -Zw  # view/select available windows and panes
# bind-key ~ show-messages
# bind-key ; last-pane


# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"

# Reload tmux configuration
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# new window and retain cwd
bind n new-window -c "#{pane_current_path}"

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Select pane and windows
bind -r C-[ previous-window
bind -r C-] next-window
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D

# Zoom pane
bind z resize-pane -Z

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
bind o kill-pane -a # leave ONLY this pane, kill others

# Break pane into separate window
bind T break-pane

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
bind \\ if '[ #{pane_index} -eq 1 ]' \
     'swap-pane -s "!"' \
     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'


# ==================================================
# === Window monitoring for activity and silence ===
# ==================================================

bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'

# Activity bell and whistles
set -g visual-activity both

# TODO: Does not work as well, check on newer versions
set -g visual-silence both

# BUG: bell-action other ignored · Issue #1027 · tmux/tmux · GitHub - https://github.com/tmux/tmux/issues/1027
#set -g visual-bell on
#setw -g bell-action other


# ================================================
# ===     Copy mode, scroll and clipboard      ===
# ================================================

set -g @copy_use_osc52_fallback on

# Prefer vi style key table
setw -g mode-keys vi

# Paste from buffer
bind p paste-buffer
bind C-p choose-buffer

# Enter copy mode
bind v copy-mode
bind -n M-Up copy-mode

# Scroll up/down by 1 line, half screen, whole screen
bind -T copy-mode-vi M-Up              send-keys -X scroll-up
bind -T copy-mode-vi M-Down            send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp          send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown        send-keys -X halfpage-down
bind -T copy-mode-vi PageDown          send-keys -X page-down
bind -T copy-mode-vi PageUp            send-keys -X page-up

# When scrolling with mouse wheel, reduce number of scrolled rows per tick to "2" (default is 5)
bind -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 2 scroll-down

# wrap default shell in reattach-to-user-namespace if available
# there is some hack with `exec & reattach`, credits to "https://github.com/gpakosz/.tmux"
# don't really understand how it works, but at least window are not renamed to "reattach-to-user-namespace"
if -b "command -v reattach-to-user-namespace > /dev/null 2>&1" \
    "run 'tmux set -g default-command \"exec $(tmux show -gv default-shell) 2>/dev/null & reattach-to-user-namespace -l $(tmux show -gv default-shell)\"'"

# Start selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle

yank="~/dotfiles/tmux/yank.sh"

# Copy selected text
bind -T copy-mode-vi y send-keys -X copy-pipe "$yank"

bind -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi A send-keys -X append-selection \;\
    run "tmux save-buffer - | $yank"

bind-key -T copy-mode-vi H send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line

# Copy selection on drag end event, but do not cancel copy mode and do not clear selection
# clear select on subsequence mouse click
bind -T copy-mode-vi MouseDragEnd1Pane \
    send-keys -X copy-pipe "$yank"
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
   send-keys -X clear-selection

# iTerm2 works with clipboard out of the box, set-clipboard already set to "external"
set -g set-clipboard external


# =====================================
# ===           Theme               ===
# =====================================

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour148" # 070, colour076
color_blue="blue" #colour39
color_yellow="yellow" # colour220
color_red="red" # colour160
color_black="colour232"
color_white="white" # 015
color_grey="colour245"

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_white"
color_status_text="$color_grey"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_orange"
color_level_stress="$color_red"
color_window_status="$color_green"
color_window_off_indicator="$color_red"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"


# =====================================
# ===    Appearence and status bar  ===
# ======================================

set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_main,bg=$color_dark"

# status line style
set -g status-style "fg=$color_status_text,bg=$color_dark"

setw -g window-status-style "fg=$color_status_text,bg=$color_dark"
setw -g window-status-format " #I:#W "
# setw -g window-status-current-style "fg=$color_dark,bold,bg=$color_window_status"
setw -g window-status-current-style "bold,fg=$color_window_status"

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_level_warn"

# outline for active pane
setw -g pane-active-border-style "fg=$color_green"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 75

# define widgets we're going to use in status bar
wg_battery="#{battery_color_fg}#{battery_icon_charge}#[default]  "
wg_date="#[fg=$color_status_text]%h %d %H:%M#[default]"
wg_session="#[fg=$color_session_text] #S \ue0b1 #[default]"
wg_is_zoomed="#[fg=$color_dark,bg=$color_main]#{?window_zoomed_flag,[Z],}#[default]"
# TODO: highlighted for nested local session as well
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo '[\uf11c OFF]')#[default]"

# Define widgets placement on status line
set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_swap} | $wg_date | $wg_battery | #{online_status} "

# online and offline icon for tmux-online-status
# Icons are used from NerdFont
set -g @online_icon "#[fg=$color_level_ok]\uf1eb#[default]"
set -g @offline_icon "#[fg=$color_level_stress]\uf071 \ufaa9#[default]"

# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
# set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_main"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_main"

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$color_level_ok"
set -g @sysstat_cpu_color_medium "$color_level_warn"
set -g @sysstat_cpu_color_stress "$color_level_stress"

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

set -g @sysstat_swap_color_low "$color_level_ok"
set -g @sysstat_swap_color_medium "$color_level_warn"
set -g @sysstat_swap_color_stress "$color_level_stress"

set -g @batt_icon_charge_tier8 '\uf240' # '\uf578'
set -g @batt_icon_charge_tier7 '\uf241'
set -g @batt_icon_charge_tier6 '\uf241'
set -g @batt_icon_charge_tier5 '\uf242'
set -g @batt_icon_charge_tier4 '\uf242'
set -g @batt_icon_charge_tier3 '\uf243'
set -g @batt_icon_charge_tier2 '\uf244'
set -g @batt_icon_charge_tier1 '\uf244'

# override background colors for tmux-battery plugin, since we don't use pure black (colour0) as defined by default
set -g @batt_color_status_secondary_charged "$color_dark"
set -g @batt_color_status_secondary_charging "$color_dark"
set -g @batt_color_status_secondary_discharging "$color_dark"
set -g @batt_color_status_secondary_attached "$color_dark"
set -g @batt_color_status_secondary_unknown "$color_dark"

set -g @batt_color_charge_secondary_tier8 "$color_dark"
set -g @batt_color_charge_secondary_tier7 "$color_dark"
set -g @batt_color_charge_secondary_tier6 "$color_dark"
set -g @batt_color_charge_secondary_tier5 "$color_dark"
set -g @batt_color_charge_secondary_tier4 "$color_dark"
set -g @batt_color_charge_secondary_tier3 "$color_dark"
set -g @batt_color_charge_secondary_tier2 "$color_dark"
set -g @batt_color_charge_secondary_tier1 "$color_dark"

# =====================================
# ===        Renew environment      ===
# =====================================
set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind '$' run "~/dotfiles/tmux/renew_env.sh"

# ==============================================
# ===   Nesting local and remote sessions     ===
# ==============================================

# Session is considered to be remote when we ssh into host
#if-shell 'test -n "$SSH_CLIENT"' \
#    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    # set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    # set window-status-current-format " #I:#W " \;\
    # set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  refresh-client -S
#   set -u status-style \;\
#   set -u window-status-current-style \;\
#   set -u window-status-current-format \;\


# ============================
# ===       Plugins        ===
# ============================

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

# Run all plugins' scripts
run "$TMUX_PLUGIN_MANAGER_PATH/tpm"
